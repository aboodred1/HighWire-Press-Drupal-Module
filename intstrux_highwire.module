<?php 

/**
 * @file
 * Intstrux highwire module.
 */

 /**
 * Implements hook_menu().
 */
function intstrux_highwire_menu() {
  $items = array();
  
  $items['admin/config/content/highwire'] = array(
    'title' => 'HighWire settings',
    'description' => 'Configure HighWire integration, api keys',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('intstrux_highwire_admin_settings'),
    'type' => MENU_NORMAL_ITEM,
    'access arguments' => array('administer intstrux highwire settings'),
    'file' => 'intstrux_highwire.admin.inc',
  );
  
  return $items;
}

/**
 * Implements hook_permission().
 */
function intstrux_highwire_permission() {
  return array(
    'administer intstrux highwire settings' => array(
      'title' => t('Administer HighWire'),
    ),
  );
}

/**
 * Return the path to the coreylib library.
 *
 * The library is available from https://github.com/collegeman/coreylib/.
 *
 * @return string
 *   The path to the coreylib.php file.
 */
function intstrux_highwire_coreylib_path() {
  $path = &drupal_static(__FUNCTION__);

  if (!isset($path)) {
    if (!($path = variable_get('intstrux_highwire_coreylib_path', FALSE))) {
      $files = drupal_system_listing('/^coreylib\.php$/', 'libraries',
                                     'filename', 0);
      if (isset($files['coreylib.php'])) {
        $path = dirname($files['coreylib.php']->uri);
        variable_set('intstrux_highwire_coreylib_path', $path);
      }
    }
  }

  return $path;
}

/**
 * Initializes the HighWire API and returns an instance of the object.
 *
 * @param string $url
 *   An optional URL instead of the stored one.
 * @param string $path
 *   An optional path.
 * @param string $key
 *   An optional API key instead of the stored one.
 * @return coreylib
 *   Instance of the HighWire coreylib API or FALSE if fails to initialize.
 */
function intstrux_highwire_initialize($url = NULL, $path = NULL, $key = NULL) {

  if(empty($url)) {
    $url = variable_get('intstrux_highwire_api_url', '');
  }

  if (empty($key)) {
    $key = variable_get('intstrux_highwire_api_key', '');
  }
  
  if (empty($url)) {
    drupal_set_message(t('Cannot initialize HighWire API URL. Contact site administrators.'), 'error');
    watchdog('intstrux_highwire', 'HighWire API URL not found, cannot initialize HighWire API.', array(), WATCHDOG_ERROR);
    return FALSE;
  }
  
  if (empty($key)) {
    drupal_set_message(t('Cannot initialize HighWire API. Contact site administrators.'), 'error');
    watchdog('intstrux_highwire', 'HighWire API key not found, cannot initialize HighWire API.', array(), WATCHDOG_ERROR);
    return FALSE;
  }
  
  if(file_exists(intstrux_highwire_coreylib_path() . '/coreylib.php')) {
    include_once(intstrux_highwire_coreylib_path() . '/coreylib.php');
    
    $path = (!empty($path))? $path : '';

    $url = $url . '/' . $path;

    $hw = new clApi($url);
    $hw->param('key', $key);

    return $hw;
  }
  
  return false;
}

/**
 * Verifies the HighWire API key.
 */
function intstrux_highwire_verify_key($url = NULL, $key = NULL) {
  $hw = intstrux_highwire_initialize($url, NULL, $key);
  
  /* API key validation logic */
  
  return true;
}

//testing 
function intstrux_highwire_init() {
  //nothing
}






